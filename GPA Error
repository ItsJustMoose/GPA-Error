import random

def randomize(times, min, max):
    grade_list = []
    for i in range(times):
        grade_list.append(random.randint(min, max))
    return grade_list


def averaging(grades):
    total = 0
    for i in grades:
        total = total + i
        average = total/len(grades)
    return average


def assign_gpa_bracketed(grades):
    bracketed_gpa_list = []
    for i in grades:
        if 50 <= i <= 52:
            bracketed_gpa_list.append(0.7)
        elif 53 <= i <= 56:
            bracketed_gpa_list.append(1.0)
        elif 57 <= i <= 59:
            bracketed_gpa_list.append(1.3)
        elif 60 <= i <= 62:
            bracketed_gpa_list.append(1.7)
        elif 63 <= i <= 66:
            bracketed_gpa_list.append(2.0)
        elif 67 <= i <= 69:
            bracketed_gpa_list.append(2.3)
        elif 70 <= i <= 72:
            bracketed_gpa_list.append(2.7)
        elif 73 <= i <= 76:
            bracketed_gpa_list.append(3.0)
        elif 77 <= i <= 79:
            bracketed_gpa_list.append(3.3)
        elif 80 <= i <= 84:
            bracketed_gpa_list.append(3.7)
        elif i >= 85:
            bracketed_gpa_list.append(4.0)
    return bracketed_gpa_list


def calculate_bracketed(grades):
    return averaging(assign_gpa_bracketed(grades))


def assign_gpa_precise(grades):
    if grades <= 49:
        return 0.00
    elif grades == 50:
        return 0.70
    elif grades == 51:
        return 0.80
    elif grades == 52:
        return 0.90
    elif grades == 53:
        return 1.00
    elif grades == 54:
        return 1.08
    elif grades == 55:
        return 1.15
    elif grades == 56:
        return 1.23
    elif grades == 57:
        return 1.30
    elif grades == 58:
        return 1.43
    elif grades == 59:
        return 1.57
    elif grades == 60:
        return 1.70
    elif grades == 61:
        return 1.80
    elif grades == 62:
        return 1.90
    elif grades == 63:
        return 2.00
    elif grades == 64:
        return 2.08
    elif grades == 65:
        return 2.15
    elif grades == 66:
        return 2.23
    elif grades == 67:
        return 2.30
    elif grades == 68:
        return 2.43
    elif grades == 69:
        return 2.57
    elif grades == 70:
        return 2.70
    elif grades == 71:
        return 2.80
    elif grades == 72:
        return 2.90
    elif grades == 73:
        return 3.00
    elif grades == 74:
        return 3.08
    elif grades == 75:
        return 3.15
    elif grades == 76:
        return 3.23
    elif grades == 77:
        return 3.30
    elif grades == 78:
        return 3.43
    elif grades == 79:
        return 3.57
    elif grades == 80:
        return 3.70
    elif grades == 81:
        return 3.76
    elif grades == 82:
        return 3.82
    elif grades == 83:
        return 3.88
    elif grades == 84:
        return 3.94
    elif grades >= 85:
        return 4.00


def calculate_precise(grades):
    return assign_gpa_precise(round(averaging(grades)))


def disparity(grades1, grades2):
    disparity_list = []
    disparity_list.append(grades2 - grades1)
    return disparity_list


def error_range(disparity_list):
    return (max(disparity_list), min(disparity_list))


def compare_methods(grades):
    return disparity(calculate_bracketed(grades), calculate_precise(grades))


def compare_at_scale(min, max):
    disparity_list = []
    for i in range(100_000):
        disparity_list.append(compare_methods(randomize(40, min, max)))
    return error_range(disparity_list)


for i in range(5):
    print("iteration " + str(i))
    print("grades between 50 and 90: " + str(compare_at_scale(50, 90)))
    print("grades between 60 and 90: " + str(compare_at_scale(60, 90)))
    print("grades between 70 and 90: " + str(compare_at_scale(70, 90)))
    print("grades between 60 and 80: " + str(compare_at_scale(60, 80)))
